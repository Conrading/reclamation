{"version":3,"sources":["textTurningComponent.js","kalkulator.js","App.js","reportWebVitals.js","index.js"],"names":["TextAreaComponent","useState","inputData","setInputData","formattedData","setFormattedData","style","display","alignItems","marginRight","onClick","formattedLines","split","filter","Boolean","join","value","onChange","event","target","placeholder","rows","cols","navigator","clipboard","writeText","then","alert","catch","error","console","Kalendarz","state","rozpoczęcia","zakończenia","wynik","obliczenieNumer","kalkulator","bind","this","setState","length","Number","isInteger","zakończeniaUpdate","date1","Date","Difference_In_Time","secondDateNumer","getTime","defaultTime","getMonth","getDate","getYear","splittingRozpoczęcia","splittingZakończenia","premiryMiesiąć","compensate","monthGapByYear","monthGapByMonth","jedenNumer","className","e","Component","App","activeTab","setActiveTab","handleTabClick","tab","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9dc6768.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst TextAreaComponent = () => {\n  const [inputData, setInputData] = useState('');\n  const [formattedData, setFormattedData] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputData(event.target.value);\n  };\n\n  const formatData = () => {\n    const lines = inputData.split(/\\s+/).filter(Boolean);\n    const formattedLines = lines.join(' OR ');\n    setFormattedData(formattedLines);\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(formattedData)\n      .then(() => {\n        alert('Formatted data copied to clipboard!');\n      })\n      .catch((error) => {\n        console.error('Error copying to clipboard: ', error);\n      });\n  };\n\n  const clearData = () => {\n    setInputData('');\n    setFormattedData('');\n  }\n\n  return (\n    <div>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n        <div style={{ marginRight: '10px' }}>\n            <div style={{ marginRight: '10px' }}>\n                <button onClick={formatData}>Format Data</button>\n            </div>\n            <div style={{ marginRight: '10px' }}>\n                <button onClick={clearData}>Clear Data</button>\n            </div>\n        </div>\n        <textarea\n            value={inputData}\n            onChange={handleInputChange}\n            placeholder=\"Enter data separated by spaces or new lines\"\n            rows={10}\n            cols={50}\n        />\n        </div>\n        <div style={{ marginRight: '10px' }}>\n            <button onClick={copyToClipboard}>Copy Result</button>\n        </div>\n        <br />\n        <label>Formatted Data:</label>\n        <p>{formattedData}</p>\n    </div>\n  );\n};\n\nexport default TextAreaComponent;\n","import React, { Component } from 'react'\nimport './kalkulator.css';\n\n\nclass Kalendarz extends Component {\n  constructor () {\n    super ();\n    this.state = {\n      rozpoczęcia: null,\n      zakończenia: null,\n      wynik: \"How many month(s) between two dates, or counts from 1st date?\",\n      obliczenieNumer: null,\n    }\n    this.kalkulator = this.kalkulator.bind(this)\n  }\n  kalkulator () {\n    if (this.state.rozpoczęcia === null || this.state.zakończenia === null) {\n      //confirm both input are valid\n      this.setState({wynik: \"there is problem of input, maybe try again?\", obliczenieNumer: null})\n    } else {\n      if (this.state.rozpoczęcia.split(\"/\").length === 3) {\n        //confirm 1st Date is correct\n        //verify 2nd Date\n        if (this.state.zakończenia.split(\"/\").length === 3 || Number.isInteger(Number(this.state.zakończenia)) === true) {\n          var zakończeniaUpdate = this.state.zakończenia\n          //2nd Date is valid\n          //verify whether this is integer number\n          if (Number.isInteger(Number(this.state.zakończenia)) === true && Number(this.state.zakończenia) > 0) {\n            //next leap year is 2024 \n            var date1 = new Date(this.state.rozpoczęcia);\n            var Difference_In_Time = this.state.zakończenia * (1000 * 3600 * 24)\n            var secondDateNumer = date1.getTime() + Difference_In_Time\n            const defaultTime = new Date(secondDateNumer);\n            var secondDateFormat = (Number(defaultTime.getMonth()) + 1) + \"/\" + defaultTime.getDate() + \"/\" + (Number(defaultTime.getYear()) + 1900)\n            zakończeniaUpdate = secondDateFormat\n          } else {\n            this.setState({wynik: \"Did you input positive integer number?\", obliczenieNumer: null})\n          }\n          //now we have two dates, time to do the math\n          let splittingRozpoczęcia = this.state.rozpoczęcia.split(\"/\")\n          let splittingZakończenia = zakończeniaUpdate.split(\"/\")\n          //confirm whether that all make sense\n          //2nd date is later than start of date\n          if (Number(splittingRozpoczęcia[2]) > Number(splittingZakończenia[2])) {\n            this.setState({wynik: \"maybe wrong year?\", obliczenieNumer: null})\n          } else if (splittingRozpoczęcia[2] === splittingZakończenia[2] && Number(splittingRozpoczęcia[0]) > Number(splittingZakończenia[0])) {\n            this.setState({wynik: \"maybe wrong month?\", obliczenieNumer: null})\n          } else if (splittingRozpoczęcia[2] === splittingZakończenia[2] && splittingRozpoczęcia[0] === splittingZakończenia[0] && Number(splittingRozpoczęcia[1]) > Number(splittingZakończenia[1]) ) {\n            this.setState({wynik: \"maybe wrong date?\", obliczenieNumer: null})\n          } else if (splittingRozpoczęcia[2] === splittingZakończenia[2]) {\n            //okay, same year\n            //we see the first number is month\n            //calculate the difference between month, \n            let premiryMiesiąć = Number(splittingZakończenia[0]) - Number(splittingRozpoczęcia[0])\n            if (premiryMiesiąć > 12 || premiryMiesiąć < 0) {\n              this.setState({wynik: \"maybe month typo?\", obliczenieNumer: null})\n            } else {\n              //if the 2nd date is smaller than 1st date\n              //we don't need to add another month\n              //if it is at least the same data, we need to add another month\n              if (Number(splittingZakończenia[1]) < Number(splittingRozpoczęcia[1])) {\n                this.setState({ wynik: \"the correct term is: \", obliczenieNumer: premiryMiesiąć})\n              } else {\n                let compensate = premiryMiesiąć + 1\n                this.setState({ wynik: \"the correct term is: \", obliczenieNumer: compensate})\n              }\n            }\n          } else {\n            //not the same year\n            //calculate month by year gap\n            let monthGapByYear = 12 * (Number(splittingZakończenia[2]) - Number(splittingRozpoczęcia[2]))\n            let monthGapByMonth = Number(splittingZakończenia[0]) - Number(splittingRozpoczęcia[0])\n            let monthGapByDate = Number(splittingZakończenia[1]) - Number(splittingRozpoczęcia[1])\n            if (monthGapByDate < 0) {\n              let jedenNumer = Number(monthGapByYear) + Number(monthGapByMonth)\n              this.setState({ wynik: \"the correct term is: \", obliczenieNumer: jedenNumer})\n            } else {\n              let jedenNumer = Number(monthGapByYear) + Number(monthGapByMonth) + 1\n              this.setState({ wynik: \"the correct term is: \", obliczenieNumer: jedenNumer})\n            }\n          }\n        } else {\n          this.setState({wynik: \"the 2nd Date format could be incorrect, try Month/Date/Year format, or input integer number\", obliczenieNumer: null})\n        }\n      } else {\n        //confirm the 1st Date input is invalid\n        this.setState({wynik: \"the 1st Date format is incorrect, maybe try Month/Date/Year?\", obliczenieNumer: null})\n      }\n    }\n  }\n  render () {\n    return (\n      <body>\n      <div className='center-separation-line'><hr /></div>\n        <div className='main-title'>-- Date Calculator --</div>\n        <div className=\"kalkulator-frame\">\n          <div className='kalkulator-input-frame'>\n            <input className=\"kalkulator-line\" placeholder='1st date [Month/Date/Year]' onChange={(e) => {this.setState({ rozpoczęcia: e.target.value })}}/>\n          </div>\n          <div className='kalkulator-input-frame'>\n            <input className=\"kalkulator-line\" placeholder='2nd date [Month/Date/Year], or days in integer' onChange={(e) => {this.setState({ zakończenia: e.target.value })}}/>\n          </div>\n          <div className=\"kalkulator-button\" onClick={() => {this.kalkulator()}}>Calculate</div>\n          <div className='wynik-frame'>\n            <div className='wynik-swój'>{this.state.wynik}</div>\n            <div className='wynik-numer'>{this.state.obliczenieNumer}</div>\n          </div>\n        </div>\n        <br />\n      </body>\n    )\n  }\n}\n\nexport default Kalendarz;\n","import React, { useState } from 'react';\nimport './App.css';\nimport TextTurningComponent from './textTurningComponent';\nimport Kalkulator from './kalkulator';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState('TextTurningComponent');\n\n  const handleTabClick = (tab) => {\n    setActiveTab(tab);\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Excel is Matter</h1>\n      </header>\n      <main>\n        <div className=\"tabs\">\n          <button \n            className={activeTab === 'TextTurningComponent' ? 'active-tab' : 'inactive-tab'}\n            onClick={() => handleTabClick('TextTurningComponent')}\n          >\n            Text Tuning\n          </button>\n          <button \n            className={activeTab === 'Kalkulator' ? 'active-tab' : 'inactive-tab'}\n            onClick={() => handleTabClick('Kalkulator')}\n          >\n            Kalkulator\n          </button>\n        </div>\n        {activeTab === 'TextTurningComponent' && <TextTurningComponent />}\n        {activeTab === 'Kalkulator' && <Kalkulator />}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["textTurningComponent.js","App.js","reportWebVitals.js","index.js"],"names":["TextAreaComponent","useState","inputData","setInputData","formattedData","setFormattedData","style","display","alignItems","marginRight","onClick","formattedLines","split","filter","Boolean","join","value","onChange","event","target","placeholder","rows","cols","navigator","clipboard","writeText","then","alert","catch","error","console","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA4DeA,EA1DW,WACxB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KA2BA,OACE,gCACI,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAA3C,UACA,sBAAKF,MAAO,CAAEG,YAAa,QAA3B,UACI,qBAAKH,MAAO,CAAEG,YAAa,QAA3B,SACI,wBAAQC,QA1BH,WACjB,IACMC,EADQT,EAAUU,MAAM,OAAOC,OAAOC,SACfC,KAAK,QAClCV,EAAiBM,IAuBL,2BAEJ,qBAAKL,MAAO,CAAEG,YAAa,QAA3B,SACI,wBAAQC,QAbJ,WAChBP,EAAa,IACbE,EAAiB,KAWL,6BAGR,0BACIW,MAAOd,EACPe,SAtCgB,SAACC,GACzBf,EAAae,EAAMC,OAAOH,QAsClBI,YAAY,8CACZC,KAAM,GACNC,KAAM,QAGV,qBAAKhB,MAAO,CAAEG,YAAa,QAA3B,SACI,wBAAQC,QAnCM,WACtBa,UAAUC,UAAUC,UAAUrB,GAC3BsB,MAAK,WACJC,MAAM,0CAEPC,OAAM,SAACC,GACNC,QAAQD,MAAM,+BAAgCA,OA6B1C,2BAEJ,uBACA,oDACA,4BAAIzB,QCtCG2B,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,mDAEF,+BACE,cAAC,EAAD,UCCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.02096dc1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst TextAreaComponent = () => {\n  const [inputData, setInputData] = useState('');\n  const [formattedData, setFormattedData] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputData(event.target.value);\n  };\n\n  const formatData = () => {\n    const lines = inputData.split(/\\s+/).filter(Boolean);\n    const formattedLines = lines.join(' OR ');\n    setFormattedData(formattedLines);\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(formattedData)\n      .then(() => {\n        alert('Formatted data copied to clipboard!');\n      })\n      .catch((error) => {\n        console.error('Error copying to clipboard: ', error);\n      });\n  };\n\n  const clearData = () => {\n    setInputData('');\n    setFormattedData('');\n  }\n\n  return (\n    <div>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n        <div style={{ marginRight: '10px' }}>\n            <div style={{ marginRight: '10px' }}>\n                <button onClick={formatData}>Format Data</button>\n            </div>\n            <div style={{ marginRight: '10px' }}>\n                <button onClick={clearData}>Clear Data</button>\n            </div>\n        </div>\n        <textarea\n            value={inputData}\n            onChange={handleInputChange}\n            placeholder=\"Enter data separated by spaces or new lines\"\n            rows={10}\n            cols={50}\n        />\n        </div>\n        <div style={{ marginRight: '10px' }}>\n            <button onClick={copyToClipboard}>Copy Result</button>\n        </div>\n        <br />\n        <label>Formatted Data:</label>\n        <p>{formattedData}</p>\n    </div>\n  );\n};\n\nexport default TextAreaComponent;\n","import React from 'react';\nimport './App.css';\nimport TextTurningComponent from './textTurningComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Excel is Matter</h1>\n      </header>\n      <main>\n        <TextTurningComponent />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}